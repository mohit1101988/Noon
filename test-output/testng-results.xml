<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="5" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="111" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="111" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
      <class name="Random.NewTest">
        <test-method status="PASS" signature="beforeteststarted()[pri:0, instance:Random.NewTest@d2cc05a]" name="beforeteststarted" is-config="true" duration-ms="19" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeteststarted -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:Random.NewTest@d2cc05a]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="TC1()[pri:0, instance:Random.NewTest@d2cc05a]" name="TC1" duration-ms="22" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC1 -->
        <test-method status="PASS" signature="beforetestscript()[pri:0, instance:Random.NewTest@d2cc05a]" name="beforetestscript" is-config="true" duration-ms="0" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetestscript -->
        <test-method status="PASS" signature="aftertestscript()[pri:0, instance:Random.NewTest@d2cc05a]" name="aftertestscript" is-config="true" duration-ms="1" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertestscript -->
        <test-method status="PASS" signature="afterteststarted()[pri:0, instance:Random.NewTest@d2cc05a]" name="afterteststarted" is-config="true" duration-ms="0" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterteststarted -->
        <test-method status="PASS" signature="beforetestscript()[pri:0, instance:Random.NewTest@d2cc05a]" name="beforetestscript" is-config="true" duration-ms="1" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetestscript -->
        <test-method status="FAIL" signature="TC2()[pri:0, instance:Random.NewTest@d2cc05a]" name="TC2" duration-ms="5" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [8.8] but found [11.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [8.8] but found [11.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at Random.NewTest.TC2(NewTest.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC2 -->
        <test-method status="PASS" signature="aftertestscript()[pri:0, instance:Random.NewTest@d2cc05a]" name="aftertestscript" is-config="true" duration-ms="0" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertestscript -->
        <test-method status="PASS" signature="afterteststarted()[pri:0, instance:Random.NewTest@d2cc05a]" name="afterteststarted" is-config="true" duration-ms="1" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterteststarted -->
        <test-method status="PASS" signature="beforetestscript()[pri:0, instance:Random.NewTest@d2cc05a]" name="beforetestscript" is-config="true" duration-ms="1" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetestscript -->
        <test-method status="PASS" signature="TC3()[pri:0, instance:Random.NewTest@d2cc05a]" name="TC3" duration-ms="5" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC3 -->
        <test-method status="PASS" signature="aftertestscript()[pri:0, instance:Random.NewTest@d2cc05a]" name="aftertestscript" is-config="true" duration-ms="1" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertestscript -->
        <test-method status="PASS" signature="afterteststarted()[pri:0, instance:Random.NewTest@d2cc05a]" name="afterteststarted" is-config="true" duration-ms="1" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterteststarted -->
        <test-method status="PASS" signature="beforetestscript()[pri:0, instance:Random.NewTest@d2cc05a]" name="beforetestscript" is-config="true" duration-ms="0" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetestscript -->
        <test-method status="FAIL" signature="TC4()[pri:0, instance:Random.NewTest@d2cc05a]" name="TC4" duration-ms="4" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [8.8] but found [11.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [8.8] but found [11.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at Random.NewTest.TC4(NewTest.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC4 -->
        <test-method status="PASS" signature="aftertestscript()[pri:0, instance:Random.NewTest@d2cc05a]" name="aftertestscript" is-config="true" duration-ms="1" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertestscript -->
        <test-method status="PASS" signature="afterteststarted()[pri:0, instance:Random.NewTest@d2cc05a]" name="afterteststarted" is-config="true" duration-ms="0" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterteststarted -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:Random.NewTest@d2cc05a]" name="afterClass" is-config="true" duration-ms="1" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Random.NewTest -->
      <class name="Random.NewTestNegative">
        <test-method status="FAIL" signature="NTC5()[pri:0, instance:Random.NewTestNegative@4f933fd1]" name="NTC5" duration-ms="3" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [8.8] but found [11.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [8.8] but found [11.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at Random.NewTestNegative.NTC5(NewTestNegative.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NTC5 -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:Random.NewTestNegative@4f933fd1]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:Random.NewTestNegative@4f933fd1]" name="afterClass" is-config="true" duration-ms="1" started-at="2018-03-29T15:05:03Z" finished-at="2018-03-29T15:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Random.NewTestNegative -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
